@page "/"
@rendermode InteractiveServer
@using Labb2WebbTemplate.shared.DTOs
@using Labb2WebbTemplate.shared.Entities
@inject IHttpClientFactory HttpClientFactory
<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.



	@foreach (var product in Products)
	{
		<h3> @product.Id </h3>
		<h3> @product.Name </h3>
		<h3> @product.Price </h3>
	}

	<button @onclick="GetProducts">Get Products</button>
	
	<h2>Add New Product</h2>
	<form>
		<label for="productName">Product Name:</label>
		<input type="text" id="productName" @bind="NewProduct.Name" /><br />

		<label for="productDescription">Description:</label>
		<input type="text" id="productDescription" @bind="NewProduct.Description" /><br />

		<label for="productPrice">Price:</label>
		<input type="number" id="productPrice" @bind="NewProduct.Price" /><br />

		<label for="productType">Product Type:</label>
		<input type="text" id="productType" @bind="NewProduct.ProductType" /><br />

		<label for="productInventory">Inventory:</label>
		<input type="number" id="productInventory" @bind="NewProduct.Inventory" /><br />

		<label for="inventoryBalance">Inventory Balance:</label>
		<input type="checkbox" id="inventoryBalance" @bind="NewProduct.InventoryBalance" /><br />

		<button @onclick="AddProduct">Add Product</button>
	</form>
	
	

	@code
{

    public List<GetProductDto>? Products { get; set; } = new();
    public PostProductDto NewProduct { get; set; } = new();


    // protected override async Task OnInitializedAsync()
    // {
    //     var httpClient = HttpClientFactory.CreateClient("Labb2WebbTemplate"); //Den vi skapade i Client i program.cs
    //     var response = await httpClient.GetAsync("/products");

    //     if (response.IsSuccessStatusCode)
    //     {
	   //      var products = await response.Content.ReadFromJsonAsync<List<GetProductDto>>();
	   //      Products.AddRange(products);
    //     }

    //     // var bodyAsString = response.Content.ReadAsStringAsync();

    // }

    private async Task GetProducts()
    {
	    var httpClient = HttpClientFactory.CreateClient("Labb2WebbTemplate");
	    var response = await httpClient.GetAsync("/products");

	    if (response.IsSuccessStatusCode)
	    {
		    var products = await response.Content.ReadFromJsonAsync<List<GetProductDto>>();

			Products.Clear();

		    Products.AddRange(products);
	    }
    }

    private async Task LoadProducts()
    {
	    var httpClient = HttpClientFactory.CreateClient("Labb2WebbTemplate");
	    var response = await httpClient.GetAsync("/products");

	    if (response.IsSuccessStatusCode)
	    {
		    Products = await response.Content.ReadFromJsonAsync<List<GetProductDto>>();
	    }
	    else
	    {
		    Console.WriteLine("Failed to load products.");
	    }
    }

    private async Task AddProduct()
    {
	    var httpClient = HttpClientFactory.CreateClient("Labb2WebbTemplate");
	    var response = await httpClient.PostAsJsonAsync("/products", NewProduct);

	    if (response.IsSuccessStatusCode)
	    {
		    
	    }

	    else
	    {
		    // Handle error response
		    Console.WriteLine("Failed to add product.");
	    }
    }
}